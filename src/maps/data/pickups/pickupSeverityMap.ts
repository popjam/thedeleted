import type { EntityID } from "isaacscript-common";
import {
  ReadonlyMap,
  game,
  getCollectibleQuality,
  getConstituentsFromEntityID,
  isHorsePill,
} from "isaacscript-common";
import { PickupID } from "../../../enums/data/ID/PickupID";
import {
  BARELY_BAD_SEVERITY,
  BARELY_GOOD_SEVERITY,
  BATTERY_SEVERITY,
  BOMB_SEVERITY,
  CHEST_SEVERITY,
  DEFAULT_DAMAGE_UP_SEVERITY,
  DEFAULT_NECRONOMICON_SEVERITY,
  ENEMIES_SLOWDOWN_SEVERITY,
  ETERNAL_HEART_SEVERITY,
  FULL_HEART_DAMAGE_SEVERITY,
  GOLDEN_CONSUMABLE_MULTIPLIER,
  HEALTH_DOWN_SEVERITY,
  HORSE_PILL_MULTIPLIER,
  KEY_SEVERITY,
  LUCK_DOWN_SEVERITY,
  LUCK_UP_SEVERITY,
  MAX_SEVERITY,
  MIN_SEVERITY,
  MODDED_BOMB_SEVERITY,
  MODDED_CARD_SEVERITY,
  MODDED_CHEST_SEVERITY,
  MODDED_COIN_SEVERITY,
  MODDED_KEY_SEVERITY,
  MODDED_PILL_SEVERITY,
  MODDED_SACK_SEVERITY,
  NEUTRAL_SEVERITY,
  ON_FLOOR_BASE_SEVERITY,
  ON_ROOM_ACTION_FREQUENCY,
  ON_ROOM_BASE_SEVERITY,
  PENNY_SEVERITY,
  QUALITY_2_ITEM_SEVERITY,
  MODDED_HORSE_PILL_SEVERITY,
  RED_HEART_SEVERITY,
  SHOT_SPEED_DOWN_SEVERITY,
  SHOT_SPEED_UP_SEVERITY,
  SPEED_DOWN_SEVERITY,
  SPEED_UP_SEVERITY,
  TEARS_DOWN_SEVERITY,
  TEARS_UP_SEVERITY,
  TELEPORT_OUT_OF_ROOM_SEVERITY,
  TRINKET_SEVERITY,
  MODDED_SOUL_SEVERITY,
  MODDED_RED_HEART_SEVERITY,
  MODDED_RUNE_SEVERITY,
  MODDED_BATTERY_SEVERITY,
  QUALITY_4_ITEM_SEVERITY,
  QUALITY_3_ITEM_SEVERITY,
  QUALITY_0_ITEM_SEVERITY,
  QUALITY_1_ITEM_SEVERITY,
  SHOP_ITEM_QUALITY,
  MISCELLANEOUS_PICKUP_SEVERITY,
  CARD_SEVERITY,
  PILL_SEVERITY,
  SOUL_SEVERITY,
} from "../../../constants/severityConstants";
import { getPickupTypeFromPickupID } from "../../../helper/entityHelper/pickupIDHelper";
import { PickupType } from "../../../enums/general/PickupType";
import { PillEffect } from "isaac-typescript-definitions";

const PICKUP_TYPE_SEVERITY_MAP = new ReadonlyMap<PickupType, number>([
  [PickupType.BOMB, BOMB_SEVERITY],
  [PickupType.HEART, RED_HEART_SEVERITY],
  [PickupType.COIN, PENNY_SEVERITY],
  [PickupType.KEY, KEY_SEVERITY],
  [PickupType.CHEST, CHEST_SEVERITY],
  [PickupType.CARD, CARD_SEVERITY],
  [PickupType.PILL, PILL_SEVERITY],
  [PickupType.SOUL, SOUL_SEVERITY],
  [PickupType.TRINKET, TRINKET_SEVERITY],
  [PickupType.MISCELLANEOUS, MISCELLANEOUS_PICKUP_SEVERITY],
  [PickupType.BATTERY, BATTERY_SEVERITY],
  [PickupType.SACK, CHEST_SEVERITY],
  [PickupType.RUNE, CARD_SEVERITY],
  [PickupType.COLLECTIBLE, QUALITY_2_ITEM_SEVERITY],
  [PickupType.SHOP_ITEM, SHOP_ITEM_QUALITY],
]);

const PILL_EFFECT_SEVERITY_MAP = new ReadonlyMap<PillEffect, number>([
  [PillEffect.BAD_GAS, BARELY_GOOD_SEVERITY],
  [PillEffect.BAD_TRIP, FULL_HEART_DAMAGE_SEVERITY],
  [PillEffect.BALLS_OF_STEEL, RED_HEART_SEVERITY * 2.4],
  [PillEffect.BOMBS_ARE_KEYS, ON_ROOM_BASE_SEVERITY],
  [PillEffect.EXPLOSIVE_DIARRHEA, BARELY_GOOD_SEVERITY],
  [PillEffect.FULL_HEALTH, RED_HEART_SEVERITY * 5],
  [PillEffect.HEALTH_DOWN, HEALTH_DOWN_SEVERITY],
  [PillEffect.HEALTH_UP, ETERNAL_HEART_SEVERITY],
  [PillEffect.I_FOUND_PILLS, NEUTRAL_SEVERITY],
  [PillEffect.PUBERTY, BARELY_GOOD_SEVERITY],
  [PillEffect.PRETTY_FLY, ON_ROOM_BASE_SEVERITY * 4],
  [PillEffect.RANGE_DOWN, ON_ROOM_BASE_SEVERITY * -1],
  [PillEffect.RANGE_UP, ON_ROOM_BASE_SEVERITY],
  [PillEffect.SPEED_DOWN, SPEED_DOWN_SEVERITY],
  [PillEffect.SPEED_UP, SPEED_UP_SEVERITY],
  [PillEffect.TEARS_DOWN, TEARS_DOWN_SEVERITY],
  [PillEffect.TEARS_UP, TEARS_UP_SEVERITY],
  [PillEffect.LUCK_DOWN, LUCK_DOWN_SEVERITY],
  [PillEffect.LUCK_UP, LUCK_UP_SEVERITY],
  [PillEffect.TELEPILLS, TELEPORT_OUT_OF_ROOM_SEVERITY],
  [PillEffect.FORTY_EIGHT_HOUR_ENERGY, BATTERY_SEVERITY * 3],
  [PillEffect.HEMATEMESIS, RED_HEART_SEVERITY],
  [PillEffect.PARALYSIS, ON_ROOM_BASE_SEVERITY * -1],
  [PillEffect.I_CAN_SEE_FOREVER, ON_ROOM_BASE_SEVERITY],
  [PillEffect.PHEROMONES, ON_ROOM_BASE_SEVERITY * 2],
  [PillEffect.AMNESIA, ON_ROOM_BASE_SEVERITY * -1],
  [PillEffect.LEMON_PARTY, ON_ROOM_BASE_SEVERITY * 4],
  [PillEffect.R_U_A_WIZARD, ON_ROOM_BASE_SEVERITY * -1],
  [PillEffect.PERCS, ON_ROOM_BASE_SEVERITY * 4],
  [PillEffect.ADDICTED, ON_ROOM_BASE_SEVERITY * -2],
  [PillEffect.RELAX, BARELY_GOOD_SEVERITY],
  [PillEffect.ONE_MAKES_YOU_LARGER, ON_ROOM_BASE_SEVERITY],
  [PillEffect.ONE_MAKES_YOU_SMALL, ON_ROOM_BASE_SEVERITY],
  [PillEffect.INFESTED_EXCLAMATION, BARELY_GOOD_SEVERITY],
  [PillEffect.INFESTED_QUESTION, ON_ROOM_BASE_SEVERITY],
  [PillEffect.POWER, DEFAULT_NECRONOMICON_SEVERITY],
  [PillEffect.RETRO_VISION, ON_ROOM_BASE_SEVERITY * -1],
  [PillEffect.FRIENDS_TILL_THE_END, ON_ROOM_BASE_SEVERITY * 2],
  [PillEffect.X_LAX, BARELY_BAD_SEVERITY],
  [PillEffect.SOMETHINGS_WRONG, BARELY_GOOD_SEVERITY],
  [PillEffect.IM_DROWSY, ENEMIES_SLOWDOWN_SEVERITY],
  [PillEffect.IM_EXCITED, ENEMIES_SLOWDOWN_SEVERITY * -1],
  [PillEffect.GULP, ON_ROOM_BASE_SEVERITY * 2],
  [PillEffect.HORF, ON_ROOM_BASE_SEVERITY],
  [PillEffect.FEELS_LIKE_IM_WALKING_ON_SUNSHINE, ON_ROOM_ACTION_FREQUENCY * 2],
  [PillEffect.VURP, ON_ROOM_BASE_SEVERITY],
  [PillEffect.SHOT_SPEED_DOWN, SHOT_SPEED_DOWN_SEVERITY],
  [PillEffect.SHOT_SPEED_UP, SHOT_SPEED_UP_SEVERITY],
  [PillEffect.EXPERIMENTAL, NEUTRAL_SEVERITY],
  [PillEffect.QUESTION_MARKS, ON_ROOM_BASE_SEVERITY * -1],
]);

const PICKUP_SEVERITY_MAP = new ReadonlyMap<PickupID, number>([
  [PickupID.BOMB, BOMB_SEVERITY],
  [PickupID.TROLL_BOMB, BOMB_SEVERITY * -1],
  [PickupID.MEGATROLL_BOMB, 1],
  [PickupID.HALF_HEART, RED_HEART_SEVERITY / 2],
  [PickupID.SOUL_HEART, RED_HEART_SEVERITY * 1.2],
  [PickupID.ETERNAL_HEART, ETERNAL_HEART_SEVERITY],
  [PickupID.DOUBLE_HEART, RED_HEART_SEVERITY * 2],
  [PickupID.BLACK_HEART, RED_HEART_SEVERITY * 1.3],
  [PickupID.GOLD_HEART, RED_HEART_SEVERITY],
  [PickupID.SOUL_HEART_HALF, RED_HEART_SEVERITY],
  [PickupID.SCARED_HEART, RED_HEART_SEVERITY],
  [PickupID.BLENDED_HEART, RED_HEART_SEVERITY * 1.3],
  [PickupID.BONE_HEART, ETERNAL_HEART_SEVERITY],
  [PickupID.PENNY, PENNY_SEVERITY],
  [PickupID.NICKEL, PENNY_SEVERITY * 5],
  [PickupID.DIME, PENNY_SEVERITY * 15],
  [PickupID.DOUBLE_PENNY, PENNY_SEVERITY * 2],
  [PickupID.LUCKY_PENNY, PENNY_SEVERITY * 2],
  [PickupID.STICKY_NICKEL, PENNY_SEVERITY * 5],
  [PickupID.KEY, KEY_SEVERITY],
  [PickupID.GOLDEN_KEY, KEY_SEVERITY * GOLDEN_CONSUMABLE_MULTIPLIER],
  [PickupID.KEY_RING, KEY_SEVERITY * 2],
  [PickupID.CHARGED_KEY, KEY_SEVERITY * 2],
  [PickupID.DOUBLE_BOMB, BOMB_SEVERITY * 2],
  [PickupID.GOLDEN_BOMB, BOMB_SEVERITY * GOLDEN_CONSUMABLE_MULTIPLIER],
  [PickupID.LIL_BATTERY, BATTERY_SEVERITY],
  [PickupID.MICRO_BATTERY, BATTERY_SEVERITY / 3],
  [PickupID.CHEST, CHEST_SEVERITY],
  [PickupID.BOMB_CHEST, CHEST_SEVERITY * 1.5],
  [PickupID.SPIKED_CHEST, CHEST_SEVERITY * 1.5],
  [PickupID.ETERNAL_CHEST, CHEST_SEVERITY * 2.5],
  [PickupID.MIMIC_CHEST, CHEST_SEVERITY * 1.5],
  [PickupID.LOCKED_CHEST, CHEST_SEVERITY * 2],
  [PickupID.GRAB_BAG, CHEST_SEVERITY / 2],
  [PickupID.BLUE_BLUE_PILL, 1],
  [PickupID.WHITE_BLUE_PILL, 1],
  [PickupID.ORANGE_ORANGE_PILL, 1],
  [PickupID.WHITE_WHITE_PILL, 1],
  [PickupID.DOTS_RED_PILL, 1],
  [PickupID.PINK_RED_PILL, 1],
  [PickupID.BLUE_CADET_BLUE_PILL, 1],
  [PickupID.YELLOW_ORANGE_PILL, 1],
  [PickupID.DOTS_WHITE_PILL, 1],
  [PickupID.WHITE_AZURE_PILL, 1],
  [PickupID.BLACK_YELLOW_PILL, 1],
  [PickupID.WHITE_BLACK_PILL, 1],
  [PickupID.WHITE_YELLOW_PILL, 1],
  [PickupID.COLLECTIBLE, QUALITY_2_ITEM_SEVERITY],
  [PickupID.BROKEN_SHOVEL, 1],
  [PickupID.SHOP_ITEM, SHOP_ITEM_QUALITY],
  [PickupID.BIG_CHEST, 1],
  [PickupID.TRINKET, TRINKET_SEVERITY],
  [PickupID.RED_CHEST, CHEST_SEVERITY * 1.2],
  [PickupID.CHALLENGE_TROPHY, MAX_SEVERITY],
  [PickupID.ISAACS_BED, ON_FLOOR_BASE_SEVERITY],
  [PickupID.GIGA_BOMB, BOMB_SEVERITY * 5],
  [PickupID.THROWABLE_BOMB, BOMB_SEVERITY],
  [PickupID.GOLDEN_PENNY, PENNY_SEVERITY * GOLDEN_CONSUMABLE_MULTIPLIER],
  [PickupID.BLACK_SACK, PENNY_SEVERITY * 15],
  [PickupID.GOLD_GOLD_PILL, 1],
  [PickupID.BLUE_BLUE_HORSE_PILL, 1],
  [PickupID.WHITE_BLUE_HORSE_PILL, 1],
  [PickupID.ORANGE_ORANGE_HORSE_PILL, 1],
  [PickupID.WHITE_WHITE_HORSE_PILL, 1],
  [PickupID.DOTS_RED_HORSE_PILL, 1],
  [PickupID.PINK_RED_HORSE_PILL, 1],
  [PickupID.BLUE_CADET_BLUE_HORSE_PILL, 1],
  [PickupID.YELLOW_ORANGE_HORSE_PILL, 1],
  [PickupID.DOTS_WHITE_HORSE_PILL, 1],
  [PickupID.WHITE_AZURE_HORSE_PILL, 1],
  [PickupID.BLACK_YELLOW_HORSE_PILL, 1],
  [PickupID.WHITE_BLACK_HORSE_PILL, 1],
  [PickupID.WHITE_YELLOW_HORSE_PILL, 1],
  [PickupID.GOLD_GOLD_HORSE_PILL, 1],
  [PickupID.ROTTEN_HEART, RED_HEART_SEVERITY],
  [PickupID.POOP_NUGGET, 1],
  [PickupID.BIG_POOP_NUGGET, 1],
  [PickupID.MEGA_BATTERY, BATTERY_SEVERITY * 2],
  [
    PickupID.GOLDEN_BATTERY,
    BATTERY_SEVERITY * GOLDEN_CONSUMABLE_MULTIPLIER * -1,
  ],
  [PickupID.FOOL_CARD, ON_ROOM_ACTION_FREQUENCY],
  [PickupID.MAGICIAN_CARD, ON_ROOM_ACTION_FREQUENCY * 2],
  [PickupID.HIGH_PRIESTESS_CARD, ON_ROOM_ACTION_FREQUENCY * 4],
  [PickupID.EMPRESS_CARD, ON_ROOM_ACTION_FREQUENCY * 4],
  [PickupID.EMPEROR_CARD, ON_ROOM_ACTION_FREQUENCY * 4],
  [PickupID.HIEROPHANT_CARD, RED_HEART_SEVERITY * 2.4],
  [PickupID.LOVERS_CARD, RED_HEART_SEVERITY * 2],
  [PickupID.CHARIOT_CARD, ON_ROOM_BASE_SEVERITY * 4],
  [PickupID.JUSTICE_CARD, RED_HEART_SEVERITY * 1.2],
  [PickupID.HERMIT_CARD, ON_ROOM_BASE_SEVERITY * 2],
  [PickupID.WHEEL_OF_FORTUNE_CARD, ON_ROOM_BASE_SEVERITY * 2],
  [PickupID.STRENGTH_CARD, ON_ROOM_ACTION_FREQUENCY * 4],
  [PickupID.HANGED_MAN_CARD, ON_ROOM_ACTION_FREQUENCY],
  [PickupID.DEATH_CARD, ON_ROOM_ACTION_FREQUENCY * 8],
  [PickupID.TEMPERANCE_CARD, ON_ROOM_ACTION_FREQUENCY],
  [PickupID.DEVIL_CARD, ON_ROOM_ACTION_FREQUENCY * 4],
  [PickupID.TOWER_CARD, ON_ROOM_ACTION_FREQUENCY * -1],
  [PickupID.STARS_CARD, ON_ROOM_ACTION_FREQUENCY * 2],
  [PickupID.MOON_CARD, ON_ROOM_ACTION_FREQUENCY * 2],
  [PickupID.SUN_CARD, ON_FLOOR_BASE_SEVERITY],
  [PickupID.JUDGEMENT_CARD, ON_ROOM_ACTION_FREQUENCY * 2],
  [PickupID.WORLD_CARD, ON_ROOM_ACTION_FREQUENCY * 2],
  [PickupID.TWO_OF_CLUBS_CARD, ON_FLOOR_BASE_SEVERITY],
  [PickupID.TWO_OF_DIAMONDS_CARD, ON_FLOOR_BASE_SEVERITY],
  [PickupID.TWO_OF_SPADES_CARD, ON_FLOOR_BASE_SEVERITY],
  [PickupID.TWO_OF_HEARTS_CARD, ON_FLOOR_BASE_SEVERITY],
  [PickupID.ACE_OF_CLUBS_CARD, ON_FLOOR_BASE_SEVERITY],
  [PickupID.ACE_OF_DIAMONDS_CARD, ON_FLOOR_BASE_SEVERITY],
  [PickupID.ACE_OF_SPADES_CARD, ON_FLOOR_BASE_SEVERITY],
  [PickupID.ACE_OF_HEARTS_CARD, ON_FLOOR_BASE_SEVERITY],
  [PickupID.JOKER_CARD, ON_FLOOR_BASE_SEVERITY],
  [PickupID.HAGALAZ_RUNE, ON_ROOM_ACTION_FREQUENCY * 2],
  [PickupID.JERA_RUNE, ON_ROOM_ACTION_FREQUENCY * 8],
  [PickupID.EHWAZ_RUNE, ON_ROOM_ACTION_FREQUENCY],
  [PickupID.DAGAZ_RUNE, RED_HEART_SEVERITY * 1.5],
  [PickupID.ANSUZ_RUNE, ON_ROOM_ACTION_FREQUENCY * 2],
  [PickupID.PERTHRO_RUNE, ON_ROOM_ACTION_FREQUENCY],
  [PickupID.BERKANO_RUNE, ON_ROOM_ACTION_FREQUENCY],
  [PickupID.ALGIZ_RUNE, ON_FLOOR_BASE_SEVERITY],
  [PickupID.BLANK_RUNE, ON_ROOM_ACTION_FREQUENCY * 2],
  [PickupID.BLACK_RUNE, DEFAULT_NECRONOMICON_SEVERITY],
  [PickupID.CHAOS_CARD, MAX_SEVERITY],
  [PickupID.CREDIT_CARD, ON_ROOM_BASE_SEVERITY * 4],
  [PickupID.RULES_CARD, NEUTRAL_SEVERITY],
  [PickupID.CARD_AGAINST_HUMANITY, ON_ROOM_BASE_SEVERITY],
  [PickupID.SUICIDE_KING_CARD, MIN_SEVERITY],
  [PickupID.GET_OUT_OF_JAIL_FREE_CARD, ON_ROOM_BASE_SEVERITY * 2],
  [PickupID.QUESTION_MARK_CARD, ON_ROOM_ACTION_FREQUENCY],
  [PickupID.DICE_SHARD_CARD, ON_ROOM_BASE_SEVERITY],
  [PickupID.EMERGENCY_CONTACT_CARD, ON_ROOM_BASE_SEVERITY * 8],
  [PickupID.HOLY_CARD, ON_FLOOR_BASE_SEVERITY],
  [PickupID.HUGE_GROWTH_CARD, ON_FLOOR_BASE_SEVERITY],
  [PickupID.ANCIENT_RECALL_CARD, ON_FLOOR_BASE_SEVERITY],
  [PickupID.ERA_WALK_CARD, ON_FLOOR_BASE_SEVERITY],
  [PickupID.RUNE_SHARD, ON_ROOM_BASE_SEVERITY],
  [PickupID.REVERSE_FOOL_CARD, ON_FLOOR_BASE_SEVERITY * -1],
  [PickupID.REVERSE_MAGICIAN_CARD, ON_ROOM_BASE_SEVERITY * 8],
  [PickupID.REVERSE_HIGH_PRIESTESS_CARD, ON_FLOOR_BASE_SEVERITY * -1],
  [PickupID.REVERSE_EMPRESS_CARD, ON_FLOOR_BASE_SEVERITY],
  [PickupID.REVERSE_EMPEROR_CARD, ON_ROOM_ACTION_FREQUENCY * 8],
  [PickupID.REVERSE_HIEROPHANT_CARD, RED_HEART_SEVERITY * 2.4],
  [PickupID.REVERSE_LOVERS_CARD, ON_ROOM_BASE_SEVERITY * 8],
  [PickupID.REVERSE_CHARIOT_CARD, ON_ROOM_BASE_SEVERITY * 8],
  [PickupID.REVERSE_JUSTICE_CARD, CHEST_SEVERITY * 4],
  [PickupID.REVERSE_HERMIT_CARD, ON_ROOM_BASE_SEVERITY * 4],
  [PickupID.REVERSE_WHEEL_OF_FORTUNE_CARD, ON_ROOM_BASE_SEVERITY * 2],
  [PickupID.REVERSE_STRENGTH_CARD, ON_ROOM_BASE_SEVERITY * 8],
  [PickupID.REVERSE_HANGED_MAN_CARD, ON_ROOM_BASE_SEVERITY],
  [PickupID.REVERSE_DEATH_CARD, DEFAULT_NECRONOMICON_SEVERITY],
  [PickupID.REVERSE_TEMPERANCE_CARD, ON_ROOM_BASE_SEVERITY],
  [PickupID.REVERSE_DEVIL_CARD, ON_ROOM_BASE_SEVERITY * 4],
  [PickupID.REVERSE_TOWER_CARD, ON_ROOM_BASE_SEVERITY * 2],
  [PickupID.REVERSE_STARS_CARD, ON_ROOM_BASE_SEVERITY * 8],
  [PickupID.REVERSE_MOON_CARD, ON_ROOM_BASE_SEVERITY * 4],
  [PickupID.REVERSE_SUN_CARD, DEFAULT_DAMAGE_UP_SEVERITY],
  [PickupID.REVERSE_JUDGEMENT_CARD, ON_ROOM_BASE_SEVERITY],
  [PickupID.REVERSE_WORLD_CARD, ON_ROOM_BASE_SEVERITY * 2],
  [PickupID.CRACKED_KEY, ON_ROOM_ACTION_FREQUENCY * 4],
  [PickupID.QUEEN_OF_HEARTS_CARD, RED_HEART_SEVERITY * 10],
  [PickupID.WILD_CARD, ON_ROOM_ACTION_FREQUENCY * 4],
  [PickupID.SOUL_OF_ISAAC, ON_ROOM_ACTION_FREQUENCY * 4],
  [PickupID.SOUL_OF_MAGDALENE, RED_HEART_SEVERITY * 10],
  [PickupID.SOUL_OF_CAIN, ON_ROOM_ACTION_FREQUENCY * 4],
  [PickupID.SOUL_OF_JUDAS, ON_ROOM_ACTION_FREQUENCY * 4],
  [PickupID.SOUL_OF_BLUE_BABY, ON_ROOM_ACTION_FREQUENCY * 2],
  [PickupID.SOUL_OF_EVE, DEFAULT_NECRONOMICON_SEVERITY],
  [PickupID.SOUL_OF_SAMSON, DEFAULT_NECRONOMICON_SEVERITY],
  [PickupID.SOUL_OF_AZAZEL, ON_FLOOR_BASE_SEVERITY * 2],
  [PickupID.SOUL_OF_LAZARUS, MIN_SEVERITY],
  [PickupID.SOUL_OF_EDEN, ON_ROOM_ACTION_FREQUENCY * 4],
  [PickupID.SOUL_OF_LOST, ON_ROOM_ACTION_FREQUENCY * 8],
  [PickupID.SOUL_OF_LILITH, ON_ROOM_ACTION_FREQUENCY * 4],
  [PickupID.SOUL_OF_KEEPER, PENNY_SEVERITY * 12],
  [PickupID.SOUL_OF_APOLLYON, ON_ROOM_ACTION_FREQUENCY * 6],
  [PickupID.SOUL_OF_FORGOTTEN, ON_ROOM_ACTION_FREQUENCY * 2],
  [PickupID.SOUL_OF_BETHANY, ON_ROOM_ACTION_FREQUENCY * 4],
  [PickupID.SOUL_OF_JACOB_AND_ESAU, ON_ROOM_ACTION_FREQUENCY * 4],
  [PickupID.MOMS_BED, ON_FLOOR_BASE_SEVERITY],
  [PickupID.MOMS_CHEST, QUALITY_2_ITEM_SEVERITY],
  [PickupID.OLD_CHEST, CHEST_SEVERITY * 2],
  [PickupID.WOODEN_CHEST, CHEST_SEVERITY * 2],
  [PickupID.MEGA_CHEST, QUALITY_2_ITEM_SEVERITY * 2],
  [PickupID.HAUNTED_CHEST, CHEST_SEVERITY],
]);

/**
 * Retrieves the severity of a pickup based on its ID. Note that modded-pickup severity will not be
 * exact due to not being hard-coded.
 *
 * @param pickupID The ID of the pickup.
 * @returns The severity of the pickup, or undefined if the pickup ID is not found.
 */
export function getPickupIDSeverity(pickupID: PickupID): number {
  const pickupType = getPickupTypeFromPickupID(pickupID);
  switch (pickupType) {
    case PickupType.HEART: {
      return PICKUP_SEVERITY_MAP.get(pickupID) ?? MODDED_RED_HEART_SEVERITY;
    }

    case PickupType.COIN: {
      return PICKUP_SEVERITY_MAP.get(pickupID) ?? MODDED_COIN_SEVERITY;
    }

    case PickupType.KEY: {
      return PICKUP_SEVERITY_MAP.get(pickupID) ?? MODDED_KEY_SEVERITY;
    }

    case PickupType.BOMB: {
      return PICKUP_SEVERITY_MAP.get(pickupID) ?? MODDED_BOMB_SEVERITY;
    }

    case PickupType.POOP: {
      return PICKUP_SEVERITY_MAP.get(pickupID) ?? 1;
    }

    case PickupType.CHEST: {
      return PICKUP_SEVERITY_MAP.get(pickupID) ?? MODDED_CHEST_SEVERITY;
    }

    case PickupType.SACK: {
      return PICKUP_SEVERITY_MAP.get(pickupID) ?? MODDED_SACK_SEVERITY;
    }

    // For pills, we judge severity based on pill effect, not pill color.
    case PickupType.PILL: {
      const entitySubType = getConstituentsFromEntityID(
        pickupID as EntityID,
      )[2];
      const isHorse = isHorsePill(entitySubType);
      const pillEffect = game.GetItemPool().GetPillEffect(entitySubType);
      if (pillEffect === -1) {
        return isHorse ? MODDED_HORSE_PILL_SEVERITY : MODDED_PILL_SEVERITY;
      }

      const severity =
        (PILL_EFFECT_SEVERITY_MAP.get(pillEffect) ?? MODDED_PILL_SEVERITY) *
        (isHorse ? HORSE_PILL_MULTIPLIER : 1);

      return severity;
    }

    case PickupType.CARD: {
      return PICKUP_SEVERITY_MAP.get(pickupID) ?? MODDED_CARD_SEVERITY;
    }

    case PickupType.SOUL: {
      return PICKUP_SEVERITY_MAP.get(pickupID) ?? MODDED_SOUL_SEVERITY;
    }

    case PickupType.RUNE: {
      return PICKUP_SEVERITY_MAP.get(pickupID) ?? MODDED_RUNE_SEVERITY;
    }

    case PickupType.BATTERY: {
      return PICKUP_SEVERITY_MAP.get(pickupID) ?? MODDED_BATTERY_SEVERITY;
    }

    case PickupType.COLLECTIBLE: {
      const subType = getConstituentsFromEntityID(pickupID as EntityID)[2];
      const itemQuality = getCollectibleQuality(subType);
      if (itemQuality === 4) {
        return QUALITY_4_ITEM_SEVERITY;
      }
      if (itemQuality === 3) {
        return QUALITY_3_ITEM_SEVERITY;
      }
      if (itemQuality === 2) {
        return QUALITY_2_ITEM_SEVERITY;
      }
      if (itemQuality === 1) {
        return QUALITY_1_ITEM_SEVERITY;
      }
      return QUALITY_0_ITEM_SEVERITY;
    }

    case PickupType.TRINKET: {
      return PICKUP_SEVERITY_MAP.get(pickupID) ?? TRINKET_SEVERITY;
    }

    case PickupType.SHOP_ITEM: {
      return PICKUP_SEVERITY_MAP.get(pickupID) ?? SHOP_ITEM_QUALITY;
    }

    case PickupType.MISCELLANEOUS: {
      return PICKUP_SEVERITY_MAP.get(pickupID) ?? MISCELLANEOUS_PICKUP_SEVERITY;
    }
  }
}

/**
 * Retrieves the severity level for a given pickup type. If the pickup type is not found in the map,
 * it returns the severity level for miscellaneous pickups.
 *
 * @param pickupType The type of pickup.
 * @returns The severity level for the specified pickup type.
 */
export function getPickupTypeSeverity(pickupType: PickupType): number {
  return (
    PICKUP_TYPE_SEVERITY_MAP.get(pickupType) ?? MISCELLANEOUS_PICKUP_SEVERITY
  );
}
